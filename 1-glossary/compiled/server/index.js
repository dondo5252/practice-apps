"use strict";

//controller
require("dotenv").config(); // const save = require('./db.js')
// const get = require('./db.js')


var _require = require('./db.js'),
    save = _require.save,
    get = _require.get,
    deleteWord = _require.deleteWord;

var express = require("express");

var path = require("path");

var bodyParser = require('body-parser');

var app = express(); // Serves up all static and generated assets in ../client/dist.

app.use(express["static"](path.join(__dirname, "../client/dist")));
app.use(bodyParser.json()); //parses data allow access to req.body

/****
 *
 *
 * Other routes here....
 *
 *
 */

app.post('/glossary', function (req, res) {
  //save added definitons
  save(req.body).then(function () {
    res.sendStatus(200).send();
  })["catch"](function (error) {
    return console.log(error, "error psoting");
  });
}); //send response back

app.get('/glossary', function (req, res) {
  //console.log(get.getAll)
  get().then(function (allData) {
    res.send(allData);
  });
});
app["delete"]('/glossary', function (req, res) {
  deleteWord(req.body).then(function () {
    res.send("DEleted from app.delete");
  });
});
app.listen(process.env.PORT);
console.log("Listening at http://localhost:".concat(process.env.PORT));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwic2F2ZSIsImdldCIsImRlbGV0ZVdvcmQiLCJleHByZXNzIiwicGF0aCIsImJvZHlQYXJzZXIiLCJhcHAiLCJ1c2UiLCJqb2luIiwiX19kaXJuYW1lIiwianNvbiIsInBvc3QiLCJyZXEiLCJyZXMiLCJib2R5IiwidGhlbiIsInNlbmRTdGF0dXMiLCJzZW5kIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwiYWxsRGF0YSIsImxpc3RlbiIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIl0sInNvdXJjZXMiOlsiLi4vLi4vc2VydmVyL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vY29udHJvbGxlclxucmVxdWlyZShcImRvdGVudlwiKS5jb25maWcoKTtcbi8vIGNvbnN0IHNhdmUgPSByZXF1aXJlKCcuL2RiLmpzJylcbi8vIGNvbnN0IGdldCA9IHJlcXVpcmUoJy4vZGIuanMnKVxuY29uc3R7c2F2ZSwgZ2V0LCBkZWxldGVXb3JkfSA9IHJlcXVpcmUoJy4vZGIuanMnKVxuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoXCJwYXRoXCIpO1xuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJylcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG4vLyBTZXJ2ZXMgdXAgYWxsIHN0YXRpYyBhbmQgZ2VuZXJhdGVkIGFzc2V0cyBpbiAuLi9jbGllbnQvZGlzdC5cbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgXCIuLi9jbGllbnQvZGlzdFwiKSkpO1xuIGFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpLy9wYXJzZXMgZGF0YSBhbGxvdyBhY2Nlc3MgdG8gcmVxLmJvZHlcbi8qKioqXG4gKlxuICpcbiAqIE90aGVyIHJvdXRlcyBoZXJlLi4uLlxuICpcbiAqXG4gKi9cbmFwcC5wb3N0KCcvZ2xvc3NhcnknLCAocmVxLHJlcykgPT4ge1xuICAvL3NhdmUgYWRkZWQgZGVmaW5pdG9uc1xuICBzYXZlKHJlcS5ib2R5KVxuICAudGhlbigoKSA9PiB7XG4gICAgcmVzLnNlbmRTdGF0dXMoMjAwKS5zZW5kKCk7XG4gIH0pXG4gIC5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUubG9nKGVycm9yLCBcImVycm9yIHBzb3RpbmdcIikpXG59KVxuXG5cbiAgLy9zZW5kIHJlc3BvbnNlIGJhY2tcblxuXG5hcHAuZ2V0KCcvZ2xvc3NhcnknLCAocmVxLCByZXMpID0+IHtcbiAgIC8vY29uc29sZS5sb2coZ2V0LmdldEFsbClcbiAgZ2V0KClcbiAgLnRoZW4oKGFsbERhdGEpID0+IHtcbiAgICAgIHJlcy5zZW5kKGFsbERhdGEpXG4gIH0pXG59KVxuXG5hcHAuZGVsZXRlKCcvZ2xvc3NhcnknLCAgKHJlcSwgcmVzKSA9PiB7XG4gIGRlbGV0ZVdvcmQocmVxLmJvZHkpXG4gIC50aGVuKCgpID0+IHtcbiAgICAgIHJlcy5zZW5kKFwiREVsZXRlZCBmcm9tIGFwcC5kZWxldGVcIilcbiAgfSlcbn0pXG5cbmFwcC5saXN0ZW4ocHJvY2Vzcy5lbnYuUE9SVCk7XG5jb25zb2xlLmxvZyhgTGlzdGVuaW5nIGF0IGh0dHA6Ly9sb2NhbGhvc3Q6JHtwcm9jZXNzLmVudi5QT1JUfWApO1xuIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0FBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCLEcsQ0FDQTtBQUNBOzs7QUFDQSxlQUErQkQsT0FBTyxDQUFDLFNBQUQsQ0FBdEM7QUFBQSxJQUFNRSxJQUFOLFlBQU1BLElBQU47QUFBQSxJQUFZQyxHQUFaLFlBQVlBLEdBQVo7QUFBQSxJQUFpQkMsVUFBakIsWUFBaUJBLFVBQWpCOztBQUNBLElBQU1DLE9BQU8sR0FBR0wsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTU0sSUFBSSxHQUFHTixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNTyxVQUFVLEdBQUdQLE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUVBLElBQU1RLEdBQUcsR0FBR0gsT0FBTyxFQUFuQixDLENBRUE7O0FBQ0FHLEdBQUcsQ0FBQ0MsR0FBSixDQUFRSixPQUFPLFVBQVAsQ0FBZUMsSUFBSSxDQUFDSSxJQUFMLENBQVVDLFNBQVYsRUFBcUIsZ0JBQXJCLENBQWYsQ0FBUjtBQUNDSCxHQUFHLENBQUNDLEdBQUosQ0FBUUYsVUFBVSxDQUFDSyxJQUFYLEVBQVIsRSxDQUEwQjs7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0FKLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLFdBQVQsRUFBc0IsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7RUFDakM7RUFDQWIsSUFBSSxDQUFDWSxHQUFHLENBQUNFLElBQUwsQ0FBSixDQUNDQyxJQURELENBQ00sWUFBTTtJQUNWRixHQUFHLENBQUNHLFVBQUosQ0FBZSxHQUFmLEVBQW9CQyxJQUFwQjtFQUNELENBSEQsV0FJTyxVQUFDQyxLQUFEO0lBQUEsT0FBV0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEtBQVosRUFBbUIsZUFBbkIsQ0FBWDtFQUFBLENBSlA7QUFLRCxDQVBELEUsQ0FVRTs7QUFHRlosR0FBRyxDQUFDTCxHQUFKLENBQVEsV0FBUixFQUFxQixVQUFDVyxHQUFELEVBQU1DLEdBQU4sRUFBYztFQUNoQztFQUNEWixHQUFHLEdBQ0ZjLElBREQsQ0FDTSxVQUFDTSxPQUFELEVBQWE7SUFDZlIsR0FBRyxDQUFDSSxJQUFKLENBQVNJLE9BQVQ7RUFDSCxDQUhEO0FBSUQsQ0FORDtBQVFBZixHQUFHLFVBQUgsQ0FBVyxXQUFYLEVBQXlCLFVBQUNNLEdBQUQsRUFBTUMsR0FBTixFQUFjO0VBQ3JDWCxVQUFVLENBQUNVLEdBQUcsQ0FBQ0UsSUFBTCxDQUFWLENBQ0NDLElBREQsQ0FDTSxZQUFNO0lBQ1JGLEdBQUcsQ0FBQ0ksSUFBSixDQUFTLHlCQUFUO0VBQ0gsQ0FIRDtBQUlELENBTEQ7QUFPQVgsR0FBRyxDQUFDZ0IsTUFBSixDQUFXQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBdkI7QUFDQU4sT0FBTyxDQUFDQyxHQUFSLHlDQUE2Q0csT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQXpEIn0=