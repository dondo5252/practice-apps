"use strict";

//model
var mongoose = require("mongoose"); // 1. Use mongoose to establish a connection to MongoDB


mongoose.connect('mongodb://localhost/glossary'); // 2. Set up any schema and models needed by the app

var glossarySchema = new mongoose.Schema({
  word: String,
  definition: String
});
var Glossary = mongoose.model('Glossary', glossarySchema);

var saveInfo = function saveInfo(info) {
  console.log(info, 'saveINFO');
  return Glossary.create(info);
}; //findoneandupdate


var getAll = function getAll() {
  return Glossary.find({}).exec();
}; // let saveInfo = (info) => {glossa
//      console.log(info)
//     }
// 3. Export the models


module.exports.Glossary = Glossary;
module.exports.saveInfo = saveInfo;
module.exports.getAll = getAll; // 4. Import the models into any modules that need them
//
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJjb25uZWN0IiwiZ2xvc3NhcnlTY2hlbWEiLCJTY2hlbWEiLCJ3b3JkIiwiU3RyaW5nIiwiZGVmaW5pdGlvbiIsIkdsb3NzYXJ5IiwibW9kZWwiLCJzYXZlSW5mbyIsImluZm8iLCJjb25zb2xlIiwibG9nIiwiY3JlYXRlIiwiZ2V0QWxsIiwiZmluZCIsImV4ZWMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vc2VydmVyL2RiLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vbW9kZWxcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xuXG4vLyAxLiBVc2UgbW9uZ29vc2UgdG8gZXN0YWJsaXNoIGEgY29ubmVjdGlvbiB0byBNb25nb0RCXG5tb25nb29zZS5jb25uZWN0KCdtb25nb2RiOi8vbG9jYWxob3N0L2dsb3NzYXJ5Jyk7XG4vLyAyLiBTZXQgdXAgYW55IHNjaGVtYSBhbmQgbW9kZWxzIG5lZWRlZCBieSB0aGUgYXBwXG5cblxuY29uc3QgZ2xvc3NhcnlTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hICh7XG4gIHdvcmQ6IFN0cmluZyxcbiAgZGVmaW5pdGlvbjogU3RyaW5nXG59KTtcblxubGV0IEdsb3NzYXJ5ID0gbW9uZ29vc2UubW9kZWwoJ0dsb3NzYXJ5JywgZ2xvc3NhcnlTY2hlbWEpXG5cbiBsZXQgc2F2ZUluZm8gPSAoaW5mbykgPT4ge1xuICBjb25zb2xlLmxvZyhpbmZvLCAnc2F2ZUlORk8nKVxuICByZXR1cm4gR2xvc3NhcnkuY3JlYXRlKGluZm8pXG4gfVxuXG5cblxuLy9maW5kb25lYW5kdXBkYXRlXG5cbiBsZXQgZ2V0QWxsID0gKCkgPT4ge1xuICByZXR1cm4gR2xvc3NhcnkuZmluZCh7fSlcbiAgLmV4ZWMoKVxuIH1cbi8vIGxldCBzYXZlSW5mbyA9IChpbmZvKSA9PiB7Z2xvc3NhXG4vLyAgICAgIGNvbnNvbGUubG9nKGluZm8pXG4vLyAgICAgfVxuXG4vLyAzLiBFeHBvcnQgdGhlIG1vZGVsc1xubW9kdWxlLmV4cG9ydHMuR2xvc3NhcnkgPSBHbG9zc2FyeTtcbm1vZHVsZS5leHBvcnRzLnNhdmVJbmZvID0gc2F2ZUluZm87XG5tb2R1bGUuZXhwb3J0cy5nZXRBbGwgPSBnZXRBbGw7XG4vLyA0LiBJbXBvcnQgdGhlIG1vZGVscyBpbnRvIGFueSBtb2R1bGVzIHRoYXQgbmVlZCB0aGVtXG4vLyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLElBQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEIsQyxDQUVBOzs7QUFDQUQsUUFBUSxDQUFDRSxPQUFULENBQWlCLDhCQUFqQixFLENBQ0E7O0FBR0EsSUFBTUMsY0FBYyxHQUFHLElBQUlILFFBQVEsQ0FBQ0ksTUFBYixDQUFxQjtFQUMxQ0MsSUFBSSxFQUFFQyxNQURvQztFQUUxQ0MsVUFBVSxFQUFFRDtBQUY4QixDQUFyQixDQUF2QjtBQUtBLElBQUlFLFFBQVEsR0FBR1IsUUFBUSxDQUFDUyxLQUFULENBQWUsVUFBZixFQUEyQk4sY0FBM0IsQ0FBZjs7QUFFQyxJQUFJTyxRQUFRLEdBQUcsU0FBWEEsUUFBVyxDQUFDQyxJQUFELEVBQVU7RUFDeEJDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixJQUFaLEVBQWtCLFVBQWxCO0VBQ0EsT0FBT0gsUUFBUSxDQUFDTSxNQUFULENBQWdCSCxJQUFoQixDQUFQO0FBQ0EsQ0FIRCxDLENBT0Q7OztBQUVDLElBQUlJLE1BQU0sR0FBRyxTQUFUQSxNQUFTLEdBQU07RUFDbEIsT0FBT1AsUUFBUSxDQUFDUSxJQUFULENBQWMsRUFBZCxFQUNOQyxJQURNLEVBQVA7QUFFQSxDQUhELEMsQ0FJRDtBQUNBO0FBQ0E7QUFFQTs7O0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlWCxRQUFmLEdBQTBCQSxRQUExQjtBQUNBVSxNQUFNLENBQUNDLE9BQVAsQ0FBZVQsUUFBZixHQUEwQkEsUUFBMUI7QUFDQVEsTUFBTSxDQUFDQyxPQUFQLENBQWVKLE1BQWYsR0FBd0JBLE1BQXhCLEMsQ0FDQTtBQUNBIn0=